(set-info :smt-lib-version 2.6)
(set-logic QF_LIA)
(set-info :source |
Generated by: Nicolas Amat, Bernard Berthomieu, Silvano Dal Zilio, Didier Le Botlan
Generated on: 2022-03-07
Generator: SMPT
Application: Reachability query on the instance CircularTrains-PT-048 from the Model Checking Contest 2021 using the SMPT model-checker
Target solver: z3
Publications: https://doi.org/10.1007/978-3-030-76983-3_9, http://mcc.lip6.fr/2021/results.php
|)
(set-info :license "https://creativecommons.org/licenses/by/4.0/")
(set-info :category "industrial")
(set-info :status sat)

(declare-const F11 Int)
(assert (>= F11 0))
(declare-const Section_10 Int)
(assert (>= Section_10 0))
(declare-const F9 Int)
(assert (>= F9 0))
(declare-const Section_11 Int)
(assert (>= Section_11 0))
(declare-const F12 Int)
(assert (>= F12 0))
(declare-const F10 Int)
(assert (>= F10 0))
(declare-const Section_12 Int)
(assert (>= Section_12 0))
(declare-const F13 Int)
(assert (>= F13 0))
(declare-const Section_13 Int)
(assert (>= Section_13 0))
(declare-const F14 Int)
(assert (>= F14 0))
(declare-const Section_14 Int)
(assert (>= Section_14 0))
(declare-const F15 Int)
(assert (>= F15 0))
(declare-const Section_15 Int)
(assert (>= Section_15 0))
(declare-const F16 Int)
(assert (>= F16 0))
(declare-const Section_16 Int)
(assert (>= Section_16 0))
(declare-const F17 Int)
(assert (>= F17 0))
(declare-const Section_17 Int)
(assert (>= Section_17 0))
(declare-const F18 Int)
(assert (>= F18 0))
(declare-const Section_18 Int)
(assert (>= Section_18 0))
(declare-const F19 Int)
(assert (>= F19 0))
(declare-const Section_19 Int)
(assert (>= Section_19 0))
(declare-const F20 Int)
(assert (>= F20 0))
(declare-const Section_20 Int)
(assert (>= Section_20 0))
(declare-const F2 Int)
(assert (>= F2 0))
(declare-const Section_1 Int)
(assert (>= Section_1 0))
(declare-const F48 Int)
(assert (>= F48 0))
(declare-const Section_2 Int)
(assert (>= Section_2 0))
(declare-const F21 Int)
(assert (>= F21 0))
(declare-const Section_21 Int)
(assert (>= Section_21 0))
(declare-const F22 Int)
(assert (>= F22 0))
(declare-const Section_22 Int)
(assert (>= Section_22 0))
(declare-const F23 Int)
(assert (>= F23 0))
(declare-const Section_23 Int)
(assert (>= Section_23 0))
(declare-const F24 Int)
(assert (>= F24 0))
(declare-const Section_24 Int)
(assert (>= Section_24 0))
(declare-const F25 Int)
(assert (>= F25 0))
(declare-const Section_25 Int)
(assert (>= Section_25 0))
(declare-const F26 Int)
(assert (>= F26 0))
(declare-const Section_26 Int)
(assert (>= Section_26 0))
(declare-const F27 Int)
(assert (>= F27 0))
(declare-const Section_27 Int)
(assert (>= Section_27 0))
(declare-const F28 Int)
(assert (>= F28 0))
(declare-const Section_28 Int)
(assert (>= Section_28 0))
(declare-const F29 Int)
(assert (>= F29 0))
(declare-const Section_29 Int)
(assert (>= Section_29 0))
(declare-const F30 Int)
(assert (>= F30 0))
(declare-const Section_30 Int)
(assert (>= Section_30 0))
(declare-const F3 Int)
(assert (>= F3 0))
(declare-const F1 Int)
(assert (>= F1 0))
(declare-const Section_3 Int)
(assert (>= Section_3 0))
(declare-const F31 Int)
(assert (>= F31 0))
(declare-const Section_31 Int)
(assert (>= Section_31 0))
(declare-const F32 Int)
(assert (>= F32 0))
(declare-const Section_32 Int)
(assert (>= Section_32 0))
(declare-const F33 Int)
(assert (>= F33 0))
(declare-const Section_33 Int)
(assert (>= Section_33 0))
(declare-const F34 Int)
(assert (>= F34 0))
(declare-const Section_34 Int)
(assert (>= Section_34 0))
(declare-const F35 Int)
(assert (>= F35 0))
(declare-const Section_35 Int)
(assert (>= Section_35 0))
(declare-const F36 Int)
(assert (>= F36 0))
(declare-const Section_36 Int)
(assert (>= Section_36 0))
(declare-const F37 Int)
(assert (>= F37 0))
(declare-const Section_37 Int)
(assert (>= Section_37 0))
(declare-const F38 Int)
(assert (>= F38 0))
(declare-const Section_38 Int)
(assert (>= Section_38 0))
(declare-const F39 Int)
(assert (>= F39 0))
(declare-const Section_39 Int)
(assert (>= Section_39 0))
(declare-const F40 Int)
(assert (>= F40 0))
(declare-const Section_40 Int)
(assert (>= Section_40 0))
(declare-const F4 Int)
(assert (>= F4 0))
(declare-const Section_4 Int)
(assert (>= Section_4 0))
(declare-const F41 Int)
(assert (>= F41 0))
(declare-const Section_41 Int)
(assert (>= Section_41 0))
(declare-const F42 Int)
(assert (>= F42 0))
(declare-const Section_42 Int)
(assert (>= Section_42 0))
(declare-const F43 Int)
(assert (>= F43 0))
(declare-const Section_43 Int)
(assert (>= Section_43 0))
(declare-const F44 Int)
(assert (>= F44 0))
(declare-const Section_44 Int)
(assert (>= Section_44 0))
(declare-const F45 Int)
(assert (>= F45 0))
(declare-const Section_45 Int)
(assert (>= Section_45 0))
(declare-const F46 Int)
(assert (>= F46 0))
(declare-const Section_46 Int)
(assert (>= Section_46 0))
(declare-const F47 Int)
(assert (>= F47 0))
(declare-const Section_47 Int)
(assert (>= Section_47 0))
(declare-const Section_48 Int)
(assert (>= Section_48 0))
(declare-const F5 Int)
(assert (>= F5 0))
(declare-const Section_5 Int)
(assert (>= Section_5 0))
(declare-const F6 Int)
(assert (>= F6 0))
(declare-const Section_6 Int)
(assert (>= Section_6 0))
(declare-const F7 Int)
(assert (>= F7 0))
(declare-const Section_7 Int)
(assert (>= Section_7 0))
(declare-const F8 Int)
(assert (>= F8 0))
(declare-const Section_8 Int)
(assert (>= Section_8 0))
(declare-const Section_9 Int)
(assert (>= Section_9 0))

(declare-const a1 Int)
(assert (>= a1 0))
(declare-const a2 Int)
(assert (>= a2 0))
(declare-const a3 Int)
(assert (>= a3 0))
(declare-const a4 Int)
(assert (>= a4 0))
(declare-const a5 Int)
(assert (>= a5 0))
(declare-const a6 Int)
(assert (>= a6 0))
(declare-const a7 Int)
(assert (>= a7 0))
(declare-const a8 Int)
(assert (>= a8 0))
(declare-const a9 Int)
(assert (>= a9 0))
(declare-const a10 Int)
(assert (>= a10 0))
(declare-const a11 Int)
(assert (>= a11 0))
(declare-const a12 Int)
(assert (>= a12 0))
(declare-const a13 Int)
(assert (>= a13 0))
(declare-const a14 Int)
(assert (>= a14 0))
(declare-const a15 Int)
(assert (>= a15 0))
(declare-const a16 Int)
(assert (>= a16 0))
(declare-const a17 Int)
(assert (>= a17 0))
(declare-const a18 Int)
(assert (>= a18 0))
(declare-const a19 Int)
(assert (>= a19 0))
(declare-const a20 Int)
(assert (>= a20 0))
(declare-const a21 Int)
(assert (>= a21 0))
(declare-const a22 Int)
(assert (>= a22 0))
(declare-const a23 Int)
(assert (>= a23 0))
(declare-const a24 Int)
(assert (>= a24 0))
(declare-const a25 Int)
(assert (>= a25 0))
(declare-const a26 Int)
(assert (>= a26 0))
(declare-const a27 Int)
(assert (>= a27 0))
(declare-const a28 Int)
(assert (>= a28 0))
(declare-const a29 Int)
(assert (>= a29 0))
(declare-const a30 Int)
(assert (>= a30 0))
(declare-const a31 Int)
(assert (>= a31 0))
(declare-const a32 Int)
(assert (>= a32 0))

(assert (= F2 (+ F1 F3 Section_1 Section_4)))
(assert (= F47 (+ F46 F48 Section_1 Section_46)))
(assert (= a1 (+ F48 Section_1)))
(assert (= a2 (+ Section_2 Section_1)))
(assert (= a3 (+ F45 Section_46)))
(assert (= a4 (+ Section_47 Section_46)))
(assert (= F44 (+ F43 a3 Section_43)))
(assert (= F11 (+ F10 F12 Section_10 Section_13)))
(assert (= F8 (+ F7 F9 Section_10 Section_7)))
(assert (= a5 (+ F9 Section_10)))
(assert (= a6 (+ Section_11 Section_10)))
(assert (= a7 (+ F42 Section_43)))
(assert (= a8 (+ Section_44 Section_43)))
(assert (= a9 (+ F6 Section_7)))
(assert (= a10 (+ Section_8 Section_7)))
(assert (= F5 (+ F4 a9 Section_4)))
(assert (= F41 (+ F40 a7 Section_40)))
(assert (= a11 (+ F3 Section_4)))
(assert (= a12 (+ Section_5 Section_4)))
(assert (= a13 (+ F39 Section_40)))
(assert (= a14 (+ Section_41 Section_40)))
(assert (= F38 (+ F37 a13 Section_37)))
(assert (= a15 (+ F36 Section_37)))
(assert (= a16 (+ Section_38 Section_37)))
(assert (= F35 (+ F34 a15 Section_34)))
(assert (= a17 (+ F33 Section_34)))
(assert (= a18 (+ Section_35 Section_34)))
(assert (= F32 (+ F31 a17 Section_31)))
(assert (= a19 (+ F30 Section_31)))
(assert (= a20 (+ Section_32 Section_31)))
(assert (= F29 (+ F28 a19 Section_28)))
(assert (= a21 (+ F27 Section_28)))
(assert (= a22 (+ Section_29 Section_28)))
(assert (= F26 (+ F25 a21 Section_25)))
(assert (= a23 (+ F24 Section_25)))
(assert (= a24 (+ Section_26 Section_25)))
(assert (= F23 (+ F22 a23 Section_22)))
(assert (= a25 (+ F21 Section_22)))
(assert (= a26 (+ Section_23 Section_22)))
(assert (= F20 (+ F19 a25 Section_19)))
(assert (= a27 (+ F18 Section_19)))
(assert (= a28 (+ Section_20 Section_19)))
(assert (= F17 (+ F16 a27 Section_16)))
(assert (= a29 (+ F15 Section_16)))
(assert (= a30 (+ Section_17 Section_16)))
(assert (= F14 (+ F13 a29 Section_13)))
(assert (= a31 (+ F12 Section_13)))
(assert (= a32 (+ Section_14 Section_13)))
(assert (= (+ F1 F10 a31 F13 a29 F16 a27 F19 a25 F22 a23 F25 a21 F28 a11 a19 F31 a17 F34 a15 F37 a13 F4 F40 a7 F43 a3 F46 a1 a9 F7 a5) 16))
(assert (= (+ F10 a6) 1))
(assert (= (+ a31 Section_12) 1))
(assert (= (+ F13 a32) 1))
(assert (= (+ a29 Section_15) 1))
(assert (= (+ F16 a30) 1))
(assert (= (+ a27 Section_18) 1))
(assert (= (+ F1 a2) 1))
(assert (= (+ F19 a28) 1))
(assert (= (+ a25 Section_21) 1))
(assert (= (+ F22 a26) 1))
(assert (= (+ a23 Section_24) 1))
(assert (= (+ F25 a24) 1))
(assert (= (+ a21 Section_27) 1))
(assert (= (+ F28 a22) 1))
(assert (= (+ a11 Section_3) 1))
(assert (= (+ a19 Section_30) 1))
(assert (= (+ F31 a20) 1))
(assert (= (+ a17 Section_33) 1))
(assert (= (+ F34 a18) 1))
(assert (= (+ a15 Section_36) 1))
(assert (= (+ F37 a16) 1))
(assert (= (+ a13 Section_39) 1))
(assert (= (+ F40 a14) 1))
(assert (= (+ a7 Section_42) 1))
(assert (= (+ F43 a8) 1))
(assert (= (+ a3 Section_45) 1))
(assert (= (+ F46 a4) 1))
(assert (= (+ a1 Section_48) 1))
(assert (= (+ F4 a12) 1))
(assert (= (+ a9 Section_6) 1))
(assert (= (+ F7 a10) 1))
(assert (= (+ a6 Section_12 a32 Section_15 a30 Section_18 a2 a28 Section_21 a26 Section_24 a24 Section_27 a22 Section_3 Section_30 a20 Section_33 a18 Section_36 a16 Section_39 a14 Section_42 a8 Section_45 a4 Section_48 a12 Section_6 a10 Section_9) 16))
(assert (= (+ a5 Section_9) 1))

(assert (and (or (and (not (and (>= F17 1)(>= Section_16 1)))(and (and (>= F42 1)(>= Section_41 1))(and (>= F38 1)(>= Section_37 1))))(not (and (>= F46 1)(>= Section_45 1))))(and (>= F21 1)(>= Section_20 1))))

(check-sat)
(exit)
