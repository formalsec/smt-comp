(set-info :smt-lib-version 2.6)
(set-logic QF_LIA)
(set-info :source |
Generated by: Da Shen, Yuliya Lierler
Generated on: 2019-04-29
Generator: CMODELS-DIFF
Application: SMT-based Answer Set Solver CMODELS-DIFF [1]

[1] Da Shen and Yuliya Lierler.
    "SMT-based Answer Set Solver CMODELS-DIFF (System Description)"
    34th International Conference on Logic Programming (2018)
|)
(set-info :license "https://creativecommons.org/licenses/by/4.0/")
(set-info :category "industrial")
(set-info :status unknown)
; --- END HEADER ---

; --- Including necessary SMT functions ---

(define-fun max ((x Int) (y Int)) Int
  (ite (< x y) y x))

(define-fun min ((x Int) (y Int)) Int
  (ite (< x y) x y))

; --- END INCLUDES ---

(declare-fun |trans(0,req2,2)| () Bool)
(declare-fun |subaut0(9,exit2,12)| () Bool)
(declare-fun |subaut0(1,enter1,3)| () Bool)
(declare-fun |live(10)| () Bool)
(declare-fun |state(5)| () Bool)
(declare-fun |trans(0,req1,1)| () Bool)
(declare-fun |reach(3)| () Bool)
(declare-fun |action(req2)| () Bool)
(declare-fun |subaut(6,exit1,2)| () Bool)
(declare-fun |dom(enter2,3)| () Bool)
(declare-fun |live(2)| () Bool)
(declare-fun |subaut0(5,req1,7)| () Bool)
(declare-fun |122| () Bool)
(declare-fun |subaut0(3,exit1,0)| () Bool)
(declare-fun |state(4)| () Bool)
(declare-fun |indep(req2,exit1)| () Bool)
(declare-fun |live(13)| () Bool)
(declare-fun |live(8)| () Bool)
(declare-fun |subaut0(2,req1,4)| () Bool)
(declare-fun |subaut(1,req2,4)| () Bool)
(declare-fun |cspvar(lr116,1,6)| () Bool)
(declare-fun |live(3)| () Bool)
(declare-fun |state(12)| () Bool)
(declare-fun |indep(enter2,enter1)| () Bool)
(declare-fun |trans(12,enter1,3)| () Bool)
(declare-fun |subaut(0,req1,1)| () Bool)
(declare-fun |indep(exit1,req2)| () Bool)
(declare-fun |required(ezcsp__geq(ezcsp__pl(lr120,-1),lr118))| () Bool)
(declare-fun |144| () Bool)
(declare-fun |trans(11,enter2,9)| () Bool)
(declare-fun |indep(exit2,exit1)| () Bool)
(declare-fun |subaut0(1,req2,4)| () Bool)
(declare-fun |dom(exit1,1)| () Bool)
(declare-fun |subaut(8,exit1,13)| () Bool)
(declare-fun |live(9)| () Bool)
(declare-fun |live(12)| () Bool)
(declare-fun |dom(enter1,4)| () Bool)
(declare-fun |reach(2)| () Bool)
(declare-fun |subaut_action(req2)| () Bool)
(declare-fun |trans(5,req1,7)| () Bool)
(declare-fun |live(0)| () Bool)
(declare-fun |indep(exit1,exit2)| () Bool)
(declare-fun |subaut0(13,req1,11)| () Bool)
(declare-fun |state(13)| () Bool)
(declare-fun |reach(10)| () Bool)
(declare-fun |cspvar(lr119,1,6)| () Bool)
(declare-fun |action(enter2)| () Bool)
(declare-fun |trans(3,exit1,0)| () Bool)
(declare-fun |trans(4,enter2,9)| () Bool)
(declare-fun |live(6)| () Bool)
(declare-fun |dom(exit2,4)| () Bool)
(declare-fun |149| () Bool)
(declare-fun |state(2)| () Bool)
(declare-fun |trans(7,exit2,1)| () Bool)
(declare-fun |subaut_action(enter1)| () Bool)
(declare-fun |subaut(13,enter2,5)| () Bool)
(declare-fun |live(1)| () Bool)
(declare-fun |subaut_action(req1)| () Bool)
(declare-fun |reach(5)| () Bool)
(declare-fun |subaut0(11,enter2,9)| () Bool)
(declare-fun |required(ezcsp__geq(ezcsp__pl(lr119,-1),lr116))| () Bool)
(declare-fun |state(10)| () Bool)
(declare-fun |subaut(10,enter1,8)| () Bool)
(declare-fun |subaut_action(exit1)| () Bool)
(declare-fun |reach(11)| () Bool)
(declare-fun |subaut(7,exit2,1)| () Bool)
(declare-fun |subaut(11,enter2,9)| () Bool)
(declare-fun |subaut(13,req1,11)| () Bool)
(declare-fun |subaut(5,req1,7)| () Bool)
(declare-fun |subaut(3,exit1,0)| () Bool)
(declare-fun |subaut0(4,enter2,9)| () Bool)
(declare-fun |cspvar(lr121,1,6)| () Bool)
(declare-fun |trans(4,enter1,8)| () Bool)
(declare-fun |indep(req1,exit2)| () Bool)
(declare-fun |dom(exit1,3)| () Bool)
(declare-fun |live(7)| () Bool)
(declare-fun |dom(req1,3)| () Bool)
(declare-fun |171| () Bool)
(declare-fun |170| () Bool)
(declare-fun |action(exit2)| () Bool)
(declare-fun |required(ezcsp__geq(ezcsp__pl(lr115,-1),lr121))| () Bool)
(declare-fun |reach(4)| () Bool)
(declare-fun |subaut(12,req2,10)| () Bool)
(declare-fun |indep(req2,req1)| () Bool)
(declare-fun |trans(9,exit2,12)| () Bool)
(declare-fun |subaut0(8,exit1,13)| () Bool)
(declare-fun |subaut(2,req1,4)| () Bool)
(declare-fun |trans(13,enter2,5)| () Bool)
(declare-fun |required(ezcsp__geq(ezcsp__pl(lr116,-1),lr120))| () Bool)
(declare-fun |required(ezcsp__geq(ezcsp__pl(lr121,-1),lr119))| () Bool)
(declare-fun |trans(6,exit1,2)| () Bool)
(declare-fun |dom(req2,4)| () Bool)
(declare-fun |trans(13,req1,11)| () Bool)
(declare-fun |subaut(12,enter1,3)| () Bool)
(declare-fun |reach(12)| () Bool)
(declare-fun |reach(13)| () Bool)
(declare-fun |dom(exit2,2)| () Bool)
(declare-fun |live(4)| () Bool)
(declare-fun |cspvar(lr115,1,6)| () Bool)
(declare-fun |state(11)| () Bool)
(declare-fun |subaut(4,enter2,9)| () Bool)
(declare-fun |165| () Bool)
(declare-fun |166| () Bool)
(declare-fun |167| () Bool)
(declare-fun |161| () Bool)
(declare-fun |162| () Bool)
(declare-fun |163| () Bool)
(declare-fun |state(1)| () Bool)
(declare-fun |trans(10,enter1,8)| () Bool)
(declare-fun |reach(7)| () Bool)
(declare-fun |subaut0(12,enter1,3)| () Bool)
(declare-fun |subaut0(10,enter1,8)| () Bool)
(declare-fun |indep(exit2,req1)| () Bool)
(declare-fun |indep(req1,req2)| () Bool)
(declare-fun |subaut0(5,exit2,0)| () Bool)
(declare-fun |initialstate(0)| () Bool)
(declare-fun |trans(5,exit2,0)| () Bool)
(declare-fun |state(9)| () Bool)
(declare-fun |action(req1)| () Bool)
(declare-fun |151| () Bool)
(declare-fun |reach(9)| () Bool)
(declare-fun |152| () Bool)
(declare-fun |155| () Bool)
(declare-fun |154| () Bool)
(declare-fun |157| () Bool)
(declare-fun |159| () Bool)
(declare-fun |158| () Bool)
(declare-fun |subaut(4,enter1,8)| () Bool)
(declare-fun |state(7)| () Bool)
(declare-fun |subaut(5,exit2,0)| () Bool)
(declare-fun |subaut0(13,enter2,5)| () Bool)
(declare-fun |reach(1)| () Bool)
(declare-fun |subaut_action(enter2)| () Bool)
(declare-fun |subaut(1,enter1,3)| () Bool)
(declare-fun |trans(1,enter1,3)| () Bool)
(declare-fun |cspdomain(fd)| () Bool)
(declare-fun |dom(req1,1)| () Bool)
(declare-fun |indep(enter1,enter2)| () Bool)
(declare-fun |state(0)| () Bool)
(declare-fun |dom(enter1,1)| () Bool)
(declare-fun |dom(req2,2)| () Bool)
(declare-fun |reach(6)| () Bool)
(declare-fun |state(3)| () Bool)
(declare-fun |subaut_action(exit2)| () Bool)
(declare-fun |subaut(0,req2,2)| () Bool)
(declare-fun |subaut(3,req2,6)| () Bool)
(declare-fun |trans(1,req2,4)| () Bool)
(declare-fun |subaut0(4,enter1,8)| () Bool)
(declare-fun |state(8)| () Bool)
(declare-fun |146| () Bool)
(declare-fun |147| () Bool)
(declare-fun |reach(8)| () Bool)
(declare-fun |145| () Bool)
(declare-fun |143| () Bool)
(declare-fun |trans(2,enter2,5)| () Bool)
(declare-fun |subaut(2,enter2,5)| () Bool)
(declare-fun |148| () Bool)
(declare-fun |subaut0(7,exit2,1)| () Bool)
(declare-fun |cspvar(lr120,1,6)| () Bool)
(declare-fun |state(6)| () Bool)
(declare-fun |live(11)| () Bool)
(declare-fun |subaut0(12,req2,10)| () Bool)
(declare-fun |reach(0)| () Bool)
(declare-fun |trans(8,exit1,13)| () Bool)
(declare-fun |action(enter1)| () Bool)
(declare-fun |required(ezcsp__geq(ezcsp__pl(lr118,-1),lr115))| () Bool)
(declare-fun |trans(12,req2,10)| () Bool)
(declare-fun |subaut0(3,req2,6)| () Bool)
(declare-fun |action(exit1)| () Bool)
(declare-fun |trans(3,req2,6)| () Bool)
(declare-fun |dom(enter2,2)| () Bool)
(declare-fun |live(5)| () Bool)
(declare-fun |subaut0(6,exit1,2)| () Bool)
(declare-fun |trans(2,req1,4)| () Bool)
(declare-fun |subaut(9,exit2,12)| () Bool)
(declare-fun |subaut0(2,enter2,5)| () Bool)
(declare-fun |cspvar(lr118,1,6)| () Bool)
(declare-fun |169| () Bool)
(assert (or |subaut(1,enter1,3)| |subaut0(1,enter1,3)|))
(assert (or |subaut0(1,enter1,3)| |subaut(1,enter1,3)|))
(assert (or |subaut(1,req2,4)| |subaut0(1,req2,4)|))
(assert (or |subaut0(1,req2,4)| |subaut(1,req2,4)|))
(assert (or |subaut(2,req1,4)| |subaut0(2,req1,4)|))
(assert (or |subaut0(2,req1,4)| |subaut(2,req1,4)|))
(assert (or |subaut(2,enter2,5)| |subaut0(2,enter2,5)|))
(assert (or |subaut0(2,enter2,5)| |subaut(2,enter2,5)|))
(assert (or |subaut(3,exit1,0)| |subaut0(3,exit1,0)|))
(assert (or |subaut0(3,exit1,0)| |subaut(3,exit1,0)|))
(assert (or |subaut(3,req2,6)| |subaut0(3,req2,6)|))
(assert (or |subaut0(3,req2,6)| |subaut(3,req2,6)|))
(assert (or |subaut(4,enter1,8)| |subaut0(4,enter1,8)|))
(assert (or |subaut0(4,enter1,8)| |subaut(4,enter1,8)|))
(assert (or |subaut(4,enter2,9)| |subaut0(4,enter2,9)|))
(assert (or |subaut0(4,enter2,9)| |subaut(4,enter2,9)|))
(assert (or |subaut(5,req1,7)| |subaut0(5,req1,7)|))
(assert (or |subaut0(5,req1,7)| |subaut(5,req1,7)|))
(assert (or |subaut(5,exit2,0)| |subaut0(5,exit2,0)|))
(assert (or |subaut0(5,exit2,0)| |subaut(5,exit2,0)|))
(assert (or |subaut(6,exit1,2)| |subaut0(6,exit1,2)|))
(assert (or |subaut0(6,exit1,2)| |subaut(6,exit1,2)|))
(assert (or |subaut(7,exit2,1)| |subaut0(7,exit2,1)|))
(assert (or |subaut0(7,exit2,1)| |subaut(7,exit2,1)|))
(assert (or |subaut(8,exit1,13)| |subaut0(8,exit1,13)|))
(assert (or |subaut0(8,exit1,13)| |subaut(8,exit1,13)|))
(assert (or |subaut(9,exit2,12)| |subaut0(9,exit2,12)|))
(assert (or |subaut0(9,exit2,12)| |subaut(9,exit2,12)|))
(assert (or |subaut(10,enter1,8)| |subaut0(10,enter1,8)|))
(assert (or |subaut0(10,enter1,8)| |subaut(10,enter1,8)|))
(assert (or |subaut(11,enter2,9)| |subaut0(11,enter2,9)|))
(assert (or |subaut0(11,enter2,9)| |subaut(11,enter2,9)|))
(assert (or |subaut(12,enter1,3)| |subaut0(12,enter1,3)|))
(assert (or |subaut0(12,enter1,3)| |subaut(12,enter1,3)|))
(assert (or |subaut(12,req2,10)| |subaut0(12,req2,10)|))
(assert (or |subaut0(12,req2,10)| |subaut(12,req2,10)|))
(assert (or |subaut(13,req1,11)| |subaut0(13,req1,11)|))
(assert (or |subaut0(13,req1,11)| |subaut(13,req1,11)|))
(assert (or |subaut(13,enter2,5)| |subaut0(13,enter2,5)|))
(assert (or |subaut0(13,enter2,5)| |subaut(13,enter2,5)|))
(assert (or (not |subaut(1,enter1,3)|) |reach(3)|))
(assert (or (not |144|) |reach(3)|))
(assert (or (not |subaut(1,req2,4)|) |reach(4)|))
(assert (or (not |subaut(2,req1,4)|) |reach(4)|))
(assert (or (not |subaut(2,enter2,5)|) |reach(5)|))
(assert (or (not |145|) |reach(5)|))
(assert (or (not |subaut(3,req2,6)|) (not |reach(3)|) |reach(6)|))
(assert (or (not |146|) |reach(8)|))
(assert (or (not |147|) |reach(8)|))
(assert (or (not |148|) |reach(9)|))
(assert (or (not |149|) |reach(9)|))
(assert (or (not |subaut(5,req1,7)|) (not |reach(5)|) |reach(7)|))
(assert (or (not |subaut(8,exit1,13)|) (not |reach(8)|) |reach(13)|))
(assert (or (not |subaut(9,exit2,12)|) (not |reach(9)|) |reach(12)|))
(assert (or (not |subaut(13,req1,11)|) (not |reach(13)|) |reach(11)|))
(assert (or (not |subaut(12,req2,10)|) (not |reach(12)|) |reach(10)|))
(assert (or (not |subaut(3,exit1,0)|) |reach(3)|))
(assert (or (not |subaut(3,req2,6)|) |reach(3)|))
(assert (or (not |subaut(4,enter1,8)|) |reach(4)|))
(assert (or (not |subaut(4,enter2,9)|) |reach(4)|))
(assert (or (not |subaut(5,req1,7)|) |reach(5)|))
(assert (or (not |subaut(5,exit2,0)|) |reach(5)|))
(assert (or (not |subaut(6,exit1,2)|) |reach(6)|))
(assert (or (not |subaut(7,exit2,1)|) |reach(7)|))
(assert (or (not |subaut(8,exit1,13)|) |reach(8)|))
(assert (or (not |subaut(9,exit2,12)|) |reach(9)|))
(assert (or (not |subaut(10,enter1,8)|) |reach(10)|))
(assert (or (not |subaut(11,enter2,9)|) |reach(11)|))
(assert (or (not |subaut(12,enter1,3)|) |reach(12)|))
(assert (or (not |subaut(12,req2,10)|) |reach(12)|))
(assert (or (not |subaut(13,req1,11)|) |reach(13)|))
(assert (or (not |subaut(13,enter2,5)|) |reach(13)|))
(assert (or (not |subaut(1,enter1,3)|) |reach(3)|))
(assert (or (not |subaut(1,req2,4)|) |reach(4)|))
(assert (or (not |subaut(2,req1,4)|) |reach(4)|))
(assert (or (not |subaut(2,enter2,5)|) |reach(5)|))
(assert (or (not |subaut(3,req2,6)|) |reach(6)|))
(assert (or (not |subaut(4,enter1,8)|) |reach(8)|))
(assert (or (not |subaut(4,enter2,9)|) |reach(9)|))
(assert (or (not |subaut(5,req1,7)|) |reach(7)|))
(assert (or (not |subaut(8,exit1,13)|) |reach(13)|))
(assert (or (not |subaut(9,exit2,12)|) |reach(12)|))
(assert (or (not |subaut(10,enter1,8)|) |reach(8)|))
(assert (or (not |subaut(11,enter2,9)|) |reach(9)|))
(assert (or (not |subaut(12,enter1,3)|) |reach(3)|))
(assert (or (not |subaut(12,req2,10)|) |reach(10)|))
(assert (or (not |subaut(13,req1,11)|) |reach(11)|))
(assert (or (not |subaut(13,enter2,5)|) |reach(5)|))
(assert (or (not |reach(3)|) |live(3)|))
(assert (or (not |reach(4)|) |live(4)|))
(assert (or (not |reach(5)|) |live(5)|))
(assert (or (not |reach(6)|) |live(6)|))
(assert (or (not |reach(7)|) |live(7)|))
(assert (or (not |reach(8)|) |live(8)|))
(assert (or (not |reach(9)|) |live(9)|))
(assert (or (not |reach(10)|) |live(10)|))
(assert (or (not |reach(11)|) |live(11)|))
(assert (or (not |reach(12)|) |live(12)|))
(assert (or (not |reach(13)|) |live(13)|))
(assert (or (not |subaut(1,enter1,3)|) |live(1)|))
(assert (or (not |subaut(1,req2,4)|) |live(1)|))
(assert (or (not |subaut(2,req1,4)|) |live(2)|))
(assert (or (not |subaut(2,enter2,5)|) |live(2)|))
(assert (or (not |subaut(3,exit1,0)|) |live(3)|))
(assert (or (not |subaut(3,req2,6)|) |live(3)|))
(assert (or (not |subaut(4,enter1,8)|) |live(4)|))
(assert (or (not |subaut(4,enter2,9)|) |live(4)|))
(assert (or (not |subaut(5,req1,7)|) |live(5)|))
(assert (or (not |subaut(5,exit2,0)|) |live(5)|))
(assert (or (not |subaut(6,exit1,2)|) |live(6)|))
(assert (or (not |subaut(7,exit2,1)|) |live(7)|))
(assert (or (not |subaut(8,exit1,13)|) |live(8)|))
(assert (or (not |subaut(9,exit2,12)|) |live(9)|))
(assert (or (not |subaut(10,enter1,8)|) |live(10)|))
(assert (or (not |subaut(11,enter2,9)|) |live(11)|))
(assert (or (not |subaut(12,enter1,3)|) |live(12)|))
(assert (or (not |subaut(12,req2,10)|) |live(12)|))
(assert (or (not |subaut(13,req1,11)|) |live(13)|))
(assert (or (not |subaut(13,enter2,5)|) |live(13)|))
(assert (or (not |subaut(1,enter1,3)|) |subaut_action(enter1)|))
(assert (or (not |subaut(4,enter1,8)|) |subaut_action(enter1)|))
(assert (or (not |subaut(10,enter1,8)|) |subaut_action(enter1)|))
(assert (or (not |subaut(12,enter1,3)|) |subaut_action(enter1)|))
(assert (or (not |subaut(2,enter2,5)|) |subaut_action(enter2)|))
(assert (or (not |subaut(4,enter2,9)|) |subaut_action(enter2)|))
(assert (or (not |subaut(11,enter2,9)|) |subaut_action(enter2)|))
(assert (or (not |subaut(13,enter2,5)|) |subaut_action(enter2)|))
(assert (or (not |subaut(3,exit1,0)|) |subaut_action(exit1)|))
(assert (or (not |subaut(6,exit1,2)|) |subaut_action(exit1)|))
(assert (or (not |subaut(8,exit1,13)|) |subaut_action(exit1)|))
(assert (or (not |subaut(5,exit2,0)|) |subaut_action(exit2)|))
(assert (or (not |subaut(7,exit2,1)|) |subaut_action(exit2)|))
(assert (or (not |subaut(9,exit2,12)|) |subaut_action(exit2)|))
(assert (or (not |152|) |146|))
(assert (or (not |146|) |152|))
(assert (or (not |155|) |148|))
(assert (or (not |148|) |155|))
(assert (not |159|))
(assert (not |163|))
(assert (not |167|))
(assert (not |171|))
(assert |cspdomain(fd)|)
(assert |cspvar(lr115,1,6)|)
(assert |cspvar(lr116,1,6)|)
(assert |cspvar(lr118,1,6)|)
(assert |cspvar(lr119,1,6)|)
(assert |cspvar(lr120,1,6)|)
(assert |cspvar(lr121,1,6)|)
(assert (or (not |subaut(1,enter1,3)|) (not |subaut0(1,enter1,3)|)))
(assert (or (not |subaut0(1,enter1,3)|) (not |subaut(1,enter1,3)|)))
(assert (or (not |subaut(1,req2,4)|) (not |subaut0(1,req2,4)|)))
(assert (or (not |subaut0(1,req2,4)|) (not |subaut(1,req2,4)|)))
(assert (or (not |subaut(2,req1,4)|) (not |subaut0(2,req1,4)|)))
(assert (or (not |subaut0(2,req1,4)|) (not |subaut(2,req1,4)|)))
(assert (or (not |subaut(2,enter2,5)|) (not |subaut0(2,enter2,5)|)))
(assert (or (not |subaut0(2,enter2,5)|) (not |subaut(2,enter2,5)|)))
(assert (or (not |subaut(3,exit1,0)|) (not |subaut0(3,exit1,0)|)))
(assert (or (not |subaut0(3,exit1,0)|) (not |subaut(3,exit1,0)|)))
(assert (or (not |subaut(3,req2,6)|) (not |subaut0(3,req2,6)|)))
(assert (or (not |subaut0(3,req2,6)|) (not |subaut(3,req2,6)|)))
(assert (or (not |subaut(4,enter1,8)|) (not |subaut0(4,enter1,8)|)))
(assert (or (not |subaut0(4,enter1,8)|) (not |subaut(4,enter1,8)|)))
(assert (or (not |subaut(4,enter2,9)|) (not |subaut0(4,enter2,9)|)))
(assert (or (not |subaut0(4,enter2,9)|) (not |subaut(4,enter2,9)|)))
(assert (or (not |subaut(5,req1,7)|) (not |subaut0(5,req1,7)|)))
(assert (or (not |subaut0(5,req1,7)|) (not |subaut(5,req1,7)|)))
(assert (or (not |subaut(5,exit2,0)|) (not |subaut0(5,exit2,0)|)))
(assert (or (not |subaut0(5,exit2,0)|) (not |subaut(5,exit2,0)|)))
(assert (or (not |subaut(6,exit1,2)|) (not |subaut0(6,exit1,2)|)))
(assert (or (not |subaut0(6,exit1,2)|) (not |subaut(6,exit1,2)|)))
(assert (or (not |subaut(7,exit2,1)|) (not |subaut0(7,exit2,1)|)))
(assert (or (not |subaut0(7,exit2,1)|) (not |subaut(7,exit2,1)|)))
(assert (or (not |subaut(8,exit1,13)|) (not |subaut0(8,exit1,13)|)))
(assert (or (not |subaut0(8,exit1,13)|) (not |subaut(8,exit1,13)|)))
(assert (or (not |subaut(9,exit2,12)|) (not |subaut0(9,exit2,12)|)))
(assert (or (not |subaut0(9,exit2,12)|) (not |subaut(9,exit2,12)|)))
(assert (or (not |subaut(10,enter1,8)|) (not |subaut0(10,enter1,8)|)))
(assert (or (not |subaut0(10,enter1,8)|) (not |subaut(10,enter1,8)|)))
(assert (or (not |subaut(11,enter2,9)|) (not |subaut0(11,enter2,9)|)))
(assert (or (not |subaut0(11,enter2,9)|) (not |subaut(11,enter2,9)|)))
(assert (or (not |subaut(12,enter1,3)|) (not |subaut0(12,enter1,3)|)))
(assert (or (not |subaut0(12,enter1,3)|) (not |subaut(12,enter1,3)|)))
(assert (or (not |subaut(12,req2,10)|) (not |subaut0(12,req2,10)|)))
(assert (or (not |subaut0(12,req2,10)|) (not |subaut(12,req2,10)|)))
(assert (or (not |subaut(13,req1,11)|) (not |subaut0(13,req1,11)|)))
(assert (or (not |subaut0(13,req1,11)|) (not |subaut(13,req1,11)|)))
(assert (or (not |subaut(13,enter2,5)|) (not |subaut0(13,enter2,5)|)))
(assert (or (not |subaut0(13,enter2,5)|) (not |subaut(13,enter2,5)|)))
(assert (or (not |144|) |subaut(12,enter1,3)|))
(assert (or (not |144|) |reach(12)|))
(assert (or (not |subaut(12,enter1,3)|) (not |reach(12)|) |144|))
(assert (or (not |reach(3)|) |subaut(1,enter1,3)| |144|))
(assert (or (not |reach(4)|) |subaut(1,req2,4)| |subaut(2,req1,4)|))
(assert (or (not |145|) |subaut(13,enter2,5)|))
(assert (or (not |145|) |reach(13)|))
(assert (or (not |subaut(13,enter2,5)|) (not |reach(13)|) |145|))
(assert (or (not |reach(5)|) |subaut(2,enter2,5)| |145|))
(assert (or (not |reach(6)|) |subaut(3,req2,6)|))
(assert (or (not |reach(6)|) |reach(3)|))
(assert (or (not |146|) |subaut(4,enter1,8)|))
(assert (or (not |146|) |reach(4)|))
(assert (or (not |subaut(4,enter1,8)|) (not |reach(4)|) |146|))
(assert (or (not |147|) |subaut(10,enter1,8)|))
(assert (or (not |147|) |reach(10)|))
(assert (or (not |subaut(10,enter1,8)|) (not |reach(10)|) |147|))
(assert (or (not |reach(8)|) |151| |152|))
(assert (or (not |148|) |subaut(4,enter2,9)|))
(assert (or (not |148|) |reach(4)|))
(assert (or (not |subaut(4,enter2,9)|) (not |reach(4)|) |148|))
(assert (or (not |149|) |subaut(11,enter2,9)|))
(assert (or (not |149|) |reach(11)|))
(assert (or (not |subaut(11,enter2,9)|) (not |reach(11)|) |149|))
(assert (or (not |reach(9)|) |154| |155|))
(assert (or (not |reach(7)|) |subaut(5,req1,7)|))
(assert (or (not |reach(7)|) |reach(5)|))
(assert (or (not |reach(13)|) |157| |159|))
(assert (or (not |reach(12)|) |161| |163|))
(assert (or (not |reach(11)|) |165| |167|))
(assert (or (not |reach(10)|) |169| |171|))
(assert (or (not |live(1)|) |subaut(1,enter1,3)| |subaut(1,req2,4)|))
(assert (or (not |live(2)|) |subaut(2,req1,4)| |subaut(2,enter2,5)|))
(assert (or (not |live(3)|) |subaut(3,exit1,0)| |subaut(3,req2,6)|))
(assert (or (not |live(4)|) |subaut(4,enter1,8)| |subaut(4,enter2,9)|))
(assert (or (not |live(5)|) |subaut(5,req1,7)| |subaut(5,exit2,0)|))
(assert (or (not |live(6)|) |subaut(6,exit1,2)|))
(assert (or (not |live(7)|) |subaut(7,exit2,1)|))
(assert (or (not |live(8)|) |subaut(8,exit1,13)|))
(assert (or (not |live(9)|) |subaut(9,exit2,12)|))
(assert (or (not |live(10)|) |subaut(10,enter1,8)|))
(assert (or (not |live(11)|) |subaut(11,enter2,9)|))
(assert (or (not |live(12)|) |subaut(12,enter1,3)| |subaut(12,req2,10)|))
(assert (or (not |live(13)|) |subaut(13,req1,11)| |subaut(13,enter2,5)|))
(assert (or (not |subaut_action(enter1)|) |subaut(1,enter1,3)| |subaut(4,enter1,8)| |subaut(10,enter1,8)| |subaut(12,enter1,3)|))
(assert (or (not |subaut_action(enter2)|) |subaut(2,enter2,5)| |subaut(4,enter2,9)| |subaut(11,enter2,9)| |subaut(13,enter2,5)|))
(assert (or (not |subaut_action(exit1)|) |subaut(3,exit1,0)| |subaut(6,exit1,2)| |subaut(8,exit1,13)|))
(assert (or (not |subaut_action(exit2)|) |subaut(5,exit2,0)| |subaut(7,exit2,1)| |subaut(9,exit2,12)|))
(assert (or (not |151|) |required(ezcsp__geq(ezcsp__pl(lr115,-1),lr121))|))
(assert (or (not |151|) |147|))
(assert (or (not |required(ezcsp__geq(ezcsp__pl(lr115,-1),lr121))|) (not |147|) |151|))
(assert (or (not |154|) |required(ezcsp__geq(ezcsp__pl(lr116,-1),lr120))|))
(assert (or (not |154|) |149|))
(assert (or (not |required(ezcsp__geq(ezcsp__pl(lr116,-1),lr120))|) (not |149|) |154|))
(assert (or (not |158|) |subaut(8,exit1,13)|))
(assert (or (not |158|) |reach(8)|))
(assert (or (not |subaut(8,exit1,13)|) (not |reach(8)|) |158|))
(assert (or (not |157|) |required(ezcsp__geq(ezcsp__pl(lr118,-1),lr115))|))
(assert (or (not |157|) |158|))
(assert (or (not |required(ezcsp__geq(ezcsp__pl(lr118,-1),lr115))|) (not |158|) |157|))
(assert (or (not |162|) |subaut(9,exit2,12)|))
(assert (or (not |162|) |reach(9)|))
(assert (or (not |subaut(9,exit2,12)|) (not |reach(9)|) |162|))
(assert (or (not |161|) |required(ezcsp__geq(ezcsp__pl(lr119,-1),lr116))|))
(assert (or (not |161|) |162|))
(assert (or (not |required(ezcsp__geq(ezcsp__pl(lr119,-1),lr116))|) (not |162|) |161|))
(assert (or (not |166|) |subaut(13,req1,11)|))
(assert (or (not |166|) |reach(13)|))
(assert (or (not |subaut(13,req1,11)|) (not |reach(13)|) |166|))
(assert (or (not |165|) |required(ezcsp__geq(ezcsp__pl(lr120,-1),lr118))|))
(assert (or (not |165|) |166|))
(assert (or (not |required(ezcsp__geq(ezcsp__pl(lr120,-1),lr118))|) (not |166|) |165|))
(assert (or (not |170|) |subaut(12,req2,10)|))
(assert (or (not |170|) |reach(12)|))
(assert (or (not |subaut(12,req2,10)|) (not |reach(12)|) |170|))
(assert (or (not |169|) |required(ezcsp__geq(ezcsp__pl(lr121,-1),lr119))|))
(assert (or (not |169|) |170|))
(assert (or (not |required(ezcsp__geq(ezcsp__pl(lr121,-1),lr119))|) (not |170|) |169|))
(assert |dom(req1,1)|)
(assert |dom(req1,3)|)
(assert |dom(enter1,1)|)
(assert |dom(enter1,4)|)
(assert |dom(exit1,1)|)
(assert |dom(exit1,3)|)
(assert |dom(req2,2)|)
(assert |dom(req2,4)|)
(assert |dom(enter2,2)|)
(assert |dom(enter2,3)|)
(assert |dom(exit2,2)|)
(assert |dom(exit2,4)|)
(assert |indep(req1,req2)|)
(assert |indep(req2,req1)|)
(assert |indep(req1,exit2)|)
(assert |indep(exit2,req1)|)
(assert |indep(enter1,enter2)|)
(assert |indep(enter2,enter1)|)
(assert |indep(exit1,req2)|)
(assert |indep(req2,exit1)|)
(assert |indep(exit1,exit2)|)
(assert |indep(exit2,exit1)|)
(assert |initialstate(0)|)
(assert |trans(0,req1,1)|)
(assert |subaut(0,req1,1)|)
(assert |trans(0,req2,2)|)
(assert |subaut(0,req2,2)|)
(assert |trans(1,enter1,3)|)
(assert |trans(1,req2,4)|)
(assert |trans(2,req1,4)|)
(assert |trans(2,enter2,5)|)
(assert |trans(3,exit1,0)|)
(assert |trans(3,req2,6)|)
(assert |trans(4,enter1,8)|)
(assert |trans(4,enter2,9)|)
(assert |trans(5,req1,7)|)
(assert |trans(5,exit2,0)|)
(assert |trans(6,exit1,2)|)
(assert |trans(7,exit2,1)|)
(assert |trans(8,exit1,13)|)
(assert |trans(9,exit2,12)|)
(assert |trans(10,enter1,8)|)
(assert |trans(11,enter2,9)|)
(assert |trans(12,enter1,3)|)
(assert |trans(12,req2,10)|)
(assert |trans(13,req1,11)|)
(assert |trans(13,enter2,5)|)
(assert |state(0)|)
(assert |state(1)|)
(assert |state(2)|)
(assert |state(3)|)
(assert |state(4)|)
(assert |state(5)|)
(assert |state(6)|)
(assert |state(7)|)
(assert |state(8)|)
(assert |state(9)|)
(assert |state(10)|)
(assert |state(11)|)
(assert |state(12)|)
(assert |state(13)|)
(assert |action(req1)|)
(assert |action(req2)|)
(assert |action(enter1)|)
(assert |action(enter2)|)
(assert |action(exit1)|)
(assert |action(exit2)|)
(assert |reach(0)|)
(assert |reach(1)|)
(assert |reach(2)|)
(assert (not |122|))
(assert |live(0)|)
(assert |live(1)|)
(assert |live(2)|)
(assert |subaut_action(req1)|)
(assert |subaut_action(req2)|)
(assert |subaut_action(enter1)|)
(assert |subaut_action(enter2)|)
(assert |subaut_action(exit1)|)
(assert |subaut_action(exit2)|)
(assert |143|)
(declare-fun |lr116| () Int)
(assert (<= 1 |lr116|))
(assert (>= 6 |lr116|))

(declare-fun |lr119| () Int)
(assert (<= 1 |lr119|))
(assert (>= 6 |lr119|))

(declare-fun |lr121| () Int)
(assert (<= 1 |lr121|))
(assert (>= 6 |lr121|))

(declare-fun |lr115| () Int)
(assert (<= 1 |lr115|))
(assert (>= 6 |lr115|))

(declare-fun |lr120| () Int)
(assert (<= 1 |lr120|))
(assert (>= 6 |lr120|))

(declare-fun |lr118| () Int)
(assert (<= 1 |lr118|))
(assert (>= 6 |lr118|))

(assert (=> |required(ezcsp__geq(ezcsp__pl(lr120,-1),lr118))| (>=(+ |lr120|  (- 1)) |lr118| )))
(assert (=> |required(ezcsp__geq(ezcsp__pl(lr119,-1),lr116))| (>=(+ |lr119|  (- 1)) |lr116| )))
(assert (=> |required(ezcsp__geq(ezcsp__pl(lr115,-1),lr121))| (>=(+ |lr115|  (- 1)) |lr121| )))
(assert (=> |required(ezcsp__geq(ezcsp__pl(lr116,-1),lr120))| (>=(+ |lr116|  (- 1)) |lr120| )))
(assert (=> |required(ezcsp__geq(ezcsp__pl(lr121,-1),lr119))| (>=(+ |lr121|  (- 1)) |lr119| )))
(assert (=> |required(ezcsp__geq(ezcsp__pl(lr118,-1),lr115))| (>=(+ |lr118|  (- 1)) |lr115| )))

; Check satisfiability
(check-sat)
(exit)
