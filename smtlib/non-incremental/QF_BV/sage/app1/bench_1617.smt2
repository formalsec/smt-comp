(set-info :smt-lib-version 2.6)
(set-logic QF_BV)
(set-info :source |
 Patrice Godefroid, SAGE (systematic dynamic test generation)
 For more information: http://research.microsoft.com/en-us/um/people/pg/public_psfiles/ndss2008.pdf
|)
(set-info :category "industrial")
(set-info :status unsat)
(declare-fun T4_16 () (_ BitVec 32))
(declare-fun T4_28 () (_ BitVec 32))
(declare-fun T4_4 () (_ BitVec 32))
(declare-fun T4_92 () (_ BitVec 32))
(declare-fun T4_104 () (_ BitVec 32))
(declare-fun T1_104 () (_ BitVec 8))
(declare-fun T1_105 () (_ BitVec 8))
(declare-fun T1_106 () (_ BitVec 8))
(declare-fun T1_107 () (_ BitVec 8))
(declare-fun T1_92 () (_ BitVec 8))
(declare-fun T1_93 () (_ BitVec 8))
(declare-fun T1_94 () (_ BitVec 8))
(declare-fun T1_95 () (_ BitVec 8))
(declare-fun T1_28 () (_ BitVec 8))
(declare-fun T1_29 () (_ BitVec 8))
(declare-fun T1_30 () (_ BitVec 8))
(declare-fun T1_31 () (_ BitVec 8))
(declare-fun T1_16 () (_ BitVec 8))
(declare-fun T1_17 () (_ BitVec 8))
(declare-fun T1_18 () (_ BitVec 8))
(declare-fun T1_19 () (_ BitVec 8))
(declare-fun T1_4 () (_ BitVec 8))
(declare-fun T1_5 () (_ BitVec 8))
(declare-fun T1_6 () (_ BitVec 8))
(declare-fun T1_7 () (_ BitVec 8))
(assert (let ((?v_28 (bvadd T4_16 (_ bv19 32))) (?v_4 (bvadd T4_28 (_ bv32 32)))) (let ((?v_29 (bvsub (_ bv65536 32) (bvadd ?v_4 (_ bv24 32)))) (?v_23 (bvadd T4_28 (_ bv40 32)))) (let ((?v_27 (bvadd T4_92 ?v_23)) (?v_26 (bvsub (_ bv65536 32) ?v_4)) (?v_25 (bvadd T4_28 (_ bv141164648 32))) (?v_24 (bvadd T4_28 (_ bv141164652 32))) (?v_22 (bvadd T4_92 ?v_4))) (let ((?v_21 (bvadd ?v_22 (_ bv7 32))) (?v_19 (bvadd ?v_4 (_ bv20 32)))) (let ((?v_20 (bvadd T4_104 ?v_19)) (?v_18 (bvsub (_ bv65536 32) (bvadd ?v_4 (_ bv12 32)))) (?v_17 (bvsub (_ bv65536 32) (bvadd ?v_4 (_ bv16 32)))) (?v_16 (bvsub (_ bv65536 32) ?v_19)) (?v_15 (bvsub (_ bv65536 32) (bvadd T4_28 (_ bv36 32)))) (?v_14 (bvsub (_ bv65536 32) ?v_23)) (?v_13 (bvult (_ bv4 32) T4_4)) (?v_11 (bvsub (_ bv0 32) ((_ zero_extend 24) (ite (bvult ?v_26 (_ bv0 32)) (_ bv1 8) (_ bv0 8)))))) (let ((?v_12 (bvule ?v_11 (_ bv0 32))) (?v_9 (bvsub (_ bv0 32) ((_ zero_extend 24) (ite (bvult ?v_18 (_ bv0 32)) (_ bv1 8) (_ bv0 8)))))) (let ((?v_10 (bvule ?v_9 (_ bv0 32))) (?v_7 (bvsub (_ bv0 32) ((_ zero_extend 24) (ite (bvult ?v_17 (_ bv0 32)) (_ bv1 8) (_ bv0 8)))))) (let ((?v_8 (bvule ?v_7 (_ bv0 32))) (?v_5 (bvsub (_ bv0 32) ((_ zero_extend 24) (ite (bvult ?v_16 (_ bv0 32)) (_ bv1 8) (_ bv0 8)))))) (let ((?v_6 (bvule ?v_5 (_ bv0 32))) (?v_2 (bvsub (_ bv0 32) ((_ zero_extend 24) (ite (bvult ?v_15 (_ bv0 32)) (_ bv1 8) (_ bv0 8)))))) (let ((?v_3 (bvule ?v_2 (_ bv0 32))) (?v_0 (bvsub (_ bv0 32) ((_ zero_extend 24) (ite (bvult ?v_14 (_ bv0 32)) (_ bv1 8) (_ bv0 8)))))) (let ((?v_1 (bvule ?v_0 (_ bv0 32)))) (and true (= T4_4 (bvor (bvshl (bvor (bvshl (bvor (bvshl ((_ zero_extend 24) T1_7) (_ bv8 32)) ((_ zero_extend 24) T1_6)) (_ bv8 32)) ((_ zero_extend 24) T1_5)) (_ bv8 32)) ((_ zero_extend 24) T1_4))) (= T4_16 (bvor (bvshl (bvor (bvshl (bvor (bvshl ((_ zero_extend 24) T1_19) (_ bv8 32)) ((_ zero_extend 24) T1_18)) (_ bv8 32)) ((_ zero_extend 24) T1_17)) (_ bv8 32)) ((_ zero_extend 24) T1_16))) (= T4_28 (bvor (bvshl (bvor (bvshl (bvor (bvshl ((_ zero_extend 24) T1_31) (_ bv8 32)) ((_ zero_extend 24) T1_30)) (_ bv8 32)) ((_ zero_extend 24) T1_29)) (_ bv8 32)) ((_ zero_extend 24) T1_28))) (= T4_92 (bvor (bvshl (bvor (bvshl (bvor (bvshl ((_ zero_extend 24) T1_95) (_ bv8 32)) ((_ zero_extend 24) T1_94)) (_ bv8 32)) ((_ zero_extend 24) T1_93)) (_ bv8 32)) ((_ zero_extend 24) T1_92))) (= T4_104 (bvor (bvshl (bvor (bvshl (bvor (bvshl ((_ zero_extend 24) T1_107) (_ bv8 32)) ((_ zero_extend 24) T1_106)) (_ bv8 32)) ((_ zero_extend 24) T1_105)) (_ bv8 32)) ((_ zero_extend 24) T1_104))) (bvule (_ bv200000000 32) ?v_29) ?v_1 (bvule (_ bv0 32) ?v_0) ?v_1 ?v_3 (bvule (_ bv0 32) ?v_2) ?v_3 ?v_6 (bvule (_ bv0 32) ?v_5) ?v_6 ?v_8 (bvule (_ bv0 32) ?v_7) ?v_8 ?v_10 (bvule (_ bv0 32) ?v_9) ?v_10 (bvule (bvadd T4_4 (_ bv8 32)) (_ bv573440 32)) (bvult (_ bv1 32) (bvsub (_ bv4294967295 32) ((_ zero_extend 24) (ite (bvult (bvsub (_ bv4294967295 32) ?v_4) (_ bv0 32)) (_ bv1 8) (_ bv0 8))))) ?v_12 (bvule (_ bv0 32) ?v_11) ?v_12 ?v_13 (not (= T4_4 (_ bv0 32))) ?v_13 (bvule (bvadd T4_16 (_ bv20 32)) (_ bv573440 32)) (bvult (_ bv4 32) ?v_14) (bvule (_ bv4 32) ?v_14) (not (= ?v_14 (_ bv0 32))) (bvult ?v_14 (_ bv200000000 32)) (bvult (_ bv4 32) ?v_15) (bvule (_ bv4 32) ?v_15) (not (= ?v_15 (_ bv0 32))) (bvult ?v_15 (_ bv200000000 32)) (bvult (_ bv4 32) ?v_16) (bvule (_ bv4 32) ?v_16) (not (= ?v_16 (_ bv0 32))) (bvult ?v_16 (_ bv200000000 32)) (= T4_104 (_ bv56 32)) (not (= T4_104 (_ bv0 32))) (bvult (_ bv4 32) ?v_17) (bvule (_ bv4 32) ?v_17) (not (= ?v_17 (_ bv0 32))) (bvult ?v_17 (_ bv200000000 32)) (bvult (_ bv4 32) ?v_18) (bvule (_ bv4 32) ?v_18) (not (= ?v_18 (_ bv0 32))) (bvult ?v_18 (_ bv200000000 32)) (bvule ?v_20 ?v_21) (bvule (bvadd ?v_20 (_ bv4294967295 32)) ?v_21) (bvule (bvadd ?v_22 (_ bv8 32)) (_ bv573440 32)) (bvult (_ bv4 32) T4_16) (bvule T4_16 (_ bv65516 32)) (not (= T4_16 (_ bv0 32))) (bvule (_ bv139327844 32) (bvadd T4_28 (_ bv141164656 32))) (bvule ?v_23 (_ bv65536 32)) (bvult ?v_23 (_ bv65536 32)) (bvule (_ bv139327764 32) ?v_24) (bvule (_ bv139327852 32) ?v_24) (bvule (_ bv139327792 32) ?v_25) (bvule (_ bv139327880 32) ?v_25) (bvule (_ bv139327932 32) (bvadd ?v_4 (_ bv141164636 32))) (bvule (_ bv139327724 32) (bvadd ?v_4 (_ bv141164632 32))) (bvule (_ bv139327752 32) (bvadd ?v_4 (_ bv141164628 32))) (bvult (_ bv4 32) T4_92) (not (= T4_92 (_ bv0 32))) (bvult (_ bv4 32) ?v_26) (bvule (_ bv4 32) ?v_26) (not (= ?v_26 (_ bv0 32))) (bvult ?v_26 (_ bv200000000 32)) (bvult ?v_28 ?v_27) (bvule (bvadd ?v_27 (_ bv4294967295 32)) ?v_28) (bvule (bvadd T4_28 (_ bv31 32)) ?v_28) (bvule ?v_28 (bvadd T4_4 (_ bv7 32))) (= T4_28 (_ bv56 32)) (not (= T4_28 (_ bv0 32))) (bvule (bvsub (_ bv0 32) ((_ zero_extend 24) (ite (bvult ?v_29 (_ bv0 32)) (_ bv1 8) (_ bv0 8)))) (_ bv0 32)) (bvult ?v_4 (_ bv65536 32)) (bvult (_ bv0 32) ?v_4) (bvule (_ bv0 32) ?v_4) (bvule ?v_4 ?v_28))))))))))))))
(check-sat)
(exit)
