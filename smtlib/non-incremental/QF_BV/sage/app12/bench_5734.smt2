(set-info :smt-lib-version 2.6)
(set-logic QF_BV)
(set-info :source |
 Patrice Godefroid, SAGE (systematic dynamic test generation)
 For more information: http://research.microsoft.com/en-us/um/people/pg/public_psfiles/ndss2008.pdf
|)
(set-info :category "industrial")
(set-info :status sat)
(declare-fun T4_10859 () (_ BitVec 32))
(declare-fun T4_6551 () (_ BitVec 32))
(declare-fun T1_10859 () (_ BitVec 8))
(declare-fun T1_10860 () (_ BitVec 8))
(declare-fun T1_10861 () (_ BitVec 8))
(declare-fun T1_10862 () (_ BitVec 8))
(declare-fun T1_6551 () (_ BitVec 8))
(declare-fun T1_6552 () (_ BitVec 8))
(declare-fun T1_6553 () (_ BitVec 8))
(declare-fun T1_6554 () (_ BitVec 8))
(assert (let ((?v_3 (bvadd T4_10859 (_ bv143508694 32))) (?v_2 (bvult (_ bv0 32) T4_10859)) (?v_1 (bvsub (_ bv0 32) ((_ zero_extend 24) (ite (bvult T4_10859 (_ bv0 32)) (_ bv1 8) (_ bv0 8)))))) (let ((?v_0 (bvule ?v_1 (_ bv0 32)))) (and true (= T4_6551 (bvor (bvshl (bvor (bvshl (bvor (bvshl ((_ zero_extend 24) T1_6554) (_ bv8 32)) ((_ zero_extend 24) T1_6553)) (_ bv8 32)) ((_ zero_extend 24) T1_6552)) (_ bv8 32)) ((_ zero_extend 24) T1_6551))) (= T4_10859 (bvor (bvshl (bvor (bvshl (bvor (bvshl ((_ zero_extend 24) T1_10862) (_ bv8 32)) ((_ zero_extend 24) T1_10861)) (_ bv8 32)) ((_ zero_extend 24) T1_10860)) (_ bv8 32)) ((_ zero_extend 24) T1_10859))) (bvult (_ bv143509725 32) ?v_3) ?v_0 ?v_0 (bvule (_ bv0 32) ?v_1) (not (= T4_6551 (_ bv4294967295 32))) (bvule (_ bv258 32) T4_10859) ?v_2 ?v_2 (bvule T4_10859 (_ bv2048 32)) (not (= (_ bv0 32) T4_10859)) (bvule (_ bv0 32) T4_10859) (= T4_6551 T4_10859) (not (= T4_10859 (_ bv0 32))) (bvult (_ bv143509724 32) ?v_3)))))
(check-sat)
(exit)
