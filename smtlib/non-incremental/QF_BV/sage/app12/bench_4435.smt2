(set-info :smt-lib-version 2.6)
(set-logic QF_BV)
(set-info :source |
 Patrice Godefroid, SAGE (systematic dynamic test generation)
 For more information: http://research.microsoft.com/en-us/um/people/pg/public_psfiles/ndss2008.pdf
|)
(set-info :category "industrial")
(set-info :status sat)
(declare-fun T4_11052 () (_ BitVec 32))
(declare-fun T4_7862 () (_ BitVec 32))
(declare-fun T1_11052 () (_ BitVec 8))
(declare-fun T1_11053 () (_ BitVec 8))
(declare-fun T1_11054 () (_ BitVec 8))
(declare-fun T1_11055 () (_ BitVec 8))
(declare-fun T1_7862 () (_ BitVec 8))
(declare-fun T1_7863 () (_ BitVec 8))
(declare-fun T1_7864 () (_ BitVec 8))
(declare-fun T1_7865 () (_ BitVec 8))
(assert (let ((?v_16 (bvsub T4_11052 (_ bv2048 32))) (?v_15 (bvsub T4_11052 (_ bv4089 32))) (?v_14 (bvsub T4_11052 (_ bv6129 32))) (?v_13 (bvsub T4_11052 (_ bv8161 32))) (?v_12 (bvsub T4_11052 (_ bv10204 32))) (?v_11 (bvsub T4_11052 (_ bv12252 32))) (?v_10 (bvsub T4_11052 (_ bv14293 32))) (?v_9 (bvadd T4_11052 (_ bv143494401 32))) (?v_8 (bvsub (_ bv0 32) ((_ zero_extend 24) (ite (bvult T4_11052 (_ bv0 32)) (_ bv1 8) (_ bv0 8)))))) (let ((?v_7 (bvsub (_ bv0 32) ((_ zero_extend 24) (ite (bvult ?v_16 (_ bv0 32)) (_ bv1 8) (_ bv0 8))))) (?v_6 (bvsub (_ bv0 32) ((_ zero_extend 24) (ite (bvult ?v_15 (_ bv0 32)) (_ bv1 8) (_ bv0 8))))) (?v_5 (bvsub (_ bv0 32) ((_ zero_extend 24) (ite (bvult ?v_14 (_ bv0 32)) (_ bv1 8) (_ bv0 8))))) (?v_4 (bvsub (_ bv0 32) ((_ zero_extend 24) (ite (bvult ?v_13 (_ bv0 32)) (_ bv1 8) (_ bv0 8))))) (?v_3 (bvsub (_ bv0 32) ((_ zero_extend 24) (ite (bvult ?v_12 (_ bv0 32)) (_ bv1 8) (_ bv0 8))))) (?v_2 (bvsub (_ bv0 32) ((_ zero_extend 24) (ite (bvult ?v_11 (_ bv0 32)) (_ bv1 8) (_ bv0 8))))) (?v_1 (bvsub (_ bv0 32) ((_ zero_extend 24) (ite (bvult ?v_10 (_ bv0 32)) (_ bv1 8) (_ bv0 8)))))) (let ((?v_0 (bvule ?v_1 (_ bv0 32)))) (and true (= T4_7862 (bvor (bvshl (bvor (bvshl (bvor (bvshl ((_ zero_extend 24) T1_7865) (_ bv8 32)) ((_ zero_extend 24) T1_7864)) (_ bv8 32)) ((_ zero_extend 24) T1_7863)) (_ bv8 32)) ((_ zero_extend 24) T1_7862))) (= T4_11052 (bvor (bvshl (bvor (bvshl (bvor (bvshl ((_ zero_extend 24) T1_11055) (_ bv8 32)) ((_ zero_extend 24) T1_11054)) (_ bv8 32)) ((_ zero_extend 24) T1_11053)) (_ bv8 32)) ((_ zero_extend 24) T1_11052))) (bvslt (_ bv4294967295 32) (bvsub T4_11052 (_ bv14865 32))) ?v_0 ?v_0 (bvule (_ bv0 32) ?v_1) (bvule ?v_2 (_ bv0 32)) (bvule (_ bv0 32) ?v_2) (bvule ?v_3 (_ bv0 32)) (bvule (_ bv0 32) ?v_3) (bvule ?v_4 (_ bv0 32)) (bvule (_ bv0 32) ?v_4) (bvule ?v_5 (_ bv0 32)) (bvule (_ bv0 32) ?v_5) (bvule ?v_6 (_ bv0 32)) (bvule (_ bv0 32) ?v_6) (bvule ?v_7 (_ bv0 32)) (bvule (_ bv0 32) ?v_7) (bvule ?v_8 (_ bv0 32)) (bvule (_ bv0 32) ?v_8) (bvule ?v_9 (_ bv143509266 32)) (bvult (_ bv143509240 32) ?v_9) (bvule (_ bv258 32) (bvsub T4_11052 (_ bv14310 32))) (not (= ?v_10 (_ bv0 32))) (bvult (_ bv0 32) ?v_10) (bvule ?v_10 (_ bv2048 32)) (bvult (_ bv2041 32) ?v_11) (bvult (_ bv2048 32) ?v_12) (bvult (_ bv2043 32) ?v_13) (bvult (_ bv2032 32) ?v_14) (bvult (_ bv2040 32) ?v_15) (bvult (_ bv2041 32) ?v_16) (not (= T4_7862 (_ bv4294967295 32))) (bvult (_ bv14293 32) T4_11052) (not (= (_ bv14293 32) T4_11052)) (bvule (_ bv14293 32) T4_11052) (not (= (_ bv12252 32) T4_11052)) (not (= (_ bv10204 32) T4_11052)) (not (= (_ bv8161 32) T4_11052)) (not (= (_ bv6129 32) T4_11052)) (not (= (_ bv4089 32) T4_11052)) (not (= (_ bv2048 32) T4_11052)) (bvult (_ bv2048 32) T4_11052) (not (= (_ bv0 32) T4_11052)) (= T4_7862 T4_11052) (not (= T4_11052 (_ bv0 32))))))))
(check-sat)
(exit)
