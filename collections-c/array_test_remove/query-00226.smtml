(let-const symbol_0 i32)
(assert (bool.not (i32.eq (++ (extract (i32.extend_i24_u (extract (Ptr (i32 1049700) (i32 0)) 3 4)) 0 1) (++ (++ (extract (i32.extend_i24_u (extract (Ptr (i32 1049700) (i32 0)) 2 3)) 0 1) (extract (i32.extend_i24_u (extract (Ptr (i32 1049700) (i32 0)) 1 2)) 0 1)) (extract (i32.extend_i24_u (extract (Ptr (i32 1049700) (i32 0)) 0 1)) 0 1))) (Ptr (i32 1049792) (i32 0)))))
(assert (i32.lt (i32 14) symbol_0))
(assert (i32.lt (i32 13) symbol_0))
(assert (i32.lt (i32 12) symbol_0))
(assert (i32.lt (i32 11) symbol_0))
(assert (i32.lt (i32 10) symbol_0))
(assert (i32.lt (i32 9) symbol_0))
(assert (i32.lt (i32 8) symbol_0))
(assert (i32.lt (i32 7) symbol_0))
(assert (i32.lt (i32 6) symbol_0))
(assert (i32.lt (i32 5) symbol_0))
(assert (i32.lt (i32 4) symbol_0))
(assert (i32.lt (i32 3) symbol_0))
(assert (i32.lt symbol_0 (i32 16)))
(assert (i32.gt symbol_0 (i32 2)))
(check-sat)