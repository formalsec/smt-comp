; query-00023.smtml
(set-info :status unknown)
(set-logic ALL)
(declare-fun symbol_7 () (_ BitVec 32))
(declare-fun symbol_0 () (_ BitVec 32))
(declare-fun symbol_1 () (_ BitVec 32))
(declare-fun symbol_3 () (_ BitVec 32))
(declare-fun symbol_2 () (_ BitVec 32))
(assert
 (let ((?x17 ((_ extract 7 0) symbol_7)))
 (let ((?x18 ((_ zero_extend 24) ?x17)))
 (let ((?x19 (bvshl ?x18 (_ bv24 32))))
 (let ((?x20 (bvashr ?x19 (_ bv24 32))))
 (let ((?x11 ((_ extract 7 0) symbol_0)))
 (let ((?x12 ((_ zero_extend 24) ?x11)))
 (let ((?x14 (bvshl ?x12 (_ bv24 32))))
 (let ((?x15 (bvashr ?x14 (_ bv24 32))))
 (and (distinct ?x15 ?x20) true))))))))))
(assert
 (let ((?x28 ((_ extract 7 0) symbol_1)))
 (let ((?x29 ((_ zero_extend 24) ?x28)))
 (let ((?x30 (bvshl ?x29 (_ bv24 32))))
 (let ((?x31 (bvashr ?x30 (_ bv24 32))))
 (let ((?x23 ((_ extract 7 0) symbol_3)))
 (let ((?x24 ((_ zero_extend 24) ?x23)))
 (let ((?x25 (bvshl ?x24 (_ bv24 32))))
 (let ((?x26 (bvashr ?x25 (_ bv24 32))))
 (and (distinct ?x26 ?x31) true))))))))))
(assert
 (let ((?x23 ((_ extract 7 0) symbol_3)))
 (let ((?x24 ((_ zero_extend 24) ?x23)))
 (let ((?x25 (bvshl ?x24 (_ bv24 32))))
 (let ((?x26 (bvashr ?x25 (_ bv24 32))))
 (let (($x34 (= ?x26 (_ bv0 32))))
 (not $x34)))))))
(assert
 (let ((?x23 ((_ extract 7 0) symbol_3)))
 (let ((?x24 ((_ zero_extend 24) ?x23)))
 (let ((?x25 (bvshl ?x24 (_ bv24 32))))
 (let ((?x26 (bvashr ?x25 (_ bv24 32))))
 (let ((?x37 ((_ extract 7 0) symbol_2)))
 (let ((?x38 ((_ zero_extend 24) ?x37)))
 (let ((?x39 (bvshl ?x38 (_ bv24 32))))
 (let ((?x40 (bvashr ?x39 (_ bv24 32))))
 (and (distinct ?x40 ?x26) true))))))))))
(assert
 (let ((?x11 ((_ extract 7 0) symbol_0)))
 (let ((?x12 ((_ zero_extend 24) ?x11)))
 (let ((?x14 (bvshl ?x12 (_ bv24 32))))
 (let ((?x15 (bvashr ?x14 (_ bv24 32))))
 (let ((?x37 ((_ extract 7 0) symbol_2)))
 (let ((?x38 ((_ zero_extend 24) ?x37)))
 (let ((?x39 (bvshl ?x38 (_ bv24 32))))
 (let ((?x40 (bvashr ?x39 (_ bv24 32))))
 (and (distinct ?x40 ?x15) true))))))))))
(assert
 (let ((?x28 ((_ extract 7 0) symbol_1)))
 (let ((?x29 ((_ zero_extend 24) ?x28)))
 (let ((?x30 (bvshl ?x29 (_ bv24 32))))
 (let ((?x31 (bvashr ?x30 (_ bv24 32))))
 (let ((?x37 ((_ extract 7 0) symbol_2)))
 (let ((?x38 ((_ zero_extend 24) ?x37)))
 (let ((?x39 (bvshl ?x38 (_ bv24 32))))
 (let ((?x40 (bvashr ?x39 (_ bv24 32))))
 (and (distinct ?x40 ?x31) true))))))))))
(assert
 (let ((?x37 ((_ extract 7 0) symbol_2)))
 (let ((?x38 ((_ zero_extend 24) ?x37)))
 (let ((?x39 (bvshl ?x38 (_ bv24 32))))
 (let ((?x40 (bvashr ?x39 (_ bv24 32))))
 (let (($x44 (= ?x40 (_ bv0 32))))
 (not $x44)))))))
(assert
 (let ((?x28 ((_ extract 7 0) symbol_1)))
 (let ((?x29 ((_ zero_extend 24) ?x28)))
 (let ((?x30 (bvshl ?x29 (_ bv24 32))))
 (let ((?x31 (bvashr ?x30 (_ bv24 32))))
 (let ((?x11 ((_ extract 7 0) symbol_0)))
 (let ((?x12 ((_ zero_extend 24) ?x11)))
 (let ((?x14 (bvshl ?x12 (_ bv24 32))))
 (let ((?x15 (bvashr ?x14 (_ bv24 32))))
 (and (distinct ?x15 ?x31) true))))))))))
(assert
 (let ((?x11 ((_ extract 7 0) symbol_0)))
 (let ((?x12 ((_ zero_extend 24) ?x11)))
 (let ((?x14 (bvshl ?x12 (_ bv24 32))))
 (let ((?x15 (bvashr ?x14 (_ bv24 32))))
 (let (($x47 (= ?x15 (_ bv0 32))))
 (not $x47)))))))
(check-sat)
