; query-00037.smtml
(set-info :status unknown)
(set-logic ALL)
(declare-fun symbol_8 () (_ BitVec 32))
(declare-fun symbol_7 () (_ BitVec 32))
(declare-fun symbol_1 () (_ BitVec 32))
(declare-fun symbol_3 () (_ BitVec 32))
(declare-fun symbol_2 () (_ BitVec 32))
(declare-fun symbol_0 () (_ BitVec 32))
(assert
 (let ((?x11 ((_ extract 7 0) symbol_8)))
 (let ((?x12 ((_ zero_extend 24) ?x11)))
 (let ((?x14 (bvshl ?x12 (_ bv24 32))))
 (let ((?x15 (bvashr ?x14 (_ bv24 32))))
 (let (($x17 (= ?x15 (_ bv0 32))))
 (not $x17)))))))
(assert
 (let ((?x25 ((_ extract 7 0) symbol_7)))
 (let ((?x26 ((_ zero_extend 24) ?x25)))
 (let ((?x27 (bvshl ?x26 (_ bv24 32))))
 (let ((?x28 (bvashr ?x27 (_ bv24 32))))
 (let ((?x20 ((_ extract 7 0) symbol_1)))
 (let ((?x21 ((_ zero_extend 24) ?x20)))
 (let ((?x22 (bvshl ?x21 (_ bv24 32))))
 (let ((?x23 (bvashr ?x22 (_ bv24 32))))
 (and (distinct ?x23 ?x28) true))))))))))
(assert
 (let ((?x20 ((_ extract 7 0) symbol_1)))
 (let ((?x21 ((_ zero_extend 24) ?x20)))
 (let ((?x22 (bvshl ?x21 (_ bv24 32))))
 (let ((?x23 (bvashr ?x22 (_ bv24 32))))
 (let (($x30 (= ?x23 (_ bv0 32))))
 (not $x30)))))))
(assert
 (let ((?x25 ((_ extract 7 0) symbol_7)))
 (let ((?x26 ((_ zero_extend 24) ?x25)))
 (let ((?x27 (bvshl ?x26 (_ bv24 32))))
 (let ((?x28 (bvashr ?x27 (_ bv24 32))))
 (let ((?x33 ((_ extract 7 0) symbol_3)))
 (let ((?x34 ((_ zero_extend 24) ?x33)))
 (let ((?x35 (bvshl ?x34 (_ bv24 32))))
 (let ((?x36 (bvashr ?x35 (_ bv24 32))))
 (and (distinct ?x36 ?x28) true))))))))))
(assert
 (let ((?x25 ((_ extract 7 0) symbol_7)))
 (let ((?x26 ((_ zero_extend 24) ?x25)))
 (let ((?x27 (bvshl ?x26 (_ bv24 32))))
 (let ((?x28 (bvashr ?x27 (_ bv24 32))))
 (let ((?x39 ((_ extract 7 0) symbol_2)))
 (let ((?x40 ((_ zero_extend 24) ?x39)))
 (let ((?x41 (bvshl ?x40 (_ bv24 32))))
 (let ((?x42 (bvashr ?x41 (_ bv24 32))))
 (and (distinct ?x42 ?x28) true))))))))))
(assert
 (let ((?x25 ((_ extract 7 0) symbol_7)))
 (let ((?x26 ((_ zero_extend 24) ?x25)))
 (let ((?x27 (bvshl ?x26 (_ bv24 32))))
 (let ((?x28 (bvashr ?x27 (_ bv24 32))))
 (let ((?x45 ((_ extract 7 0) symbol_0)))
 (let ((?x46 ((_ zero_extend 24) ?x45)))
 (let ((?x47 (bvshl ?x46 (_ bv24 32))))
 (let ((?x48 (bvashr ?x47 (_ bv24 32))))
 (and (distinct ?x48 ?x28) true))))))))))
(assert
 (let ((?x20 ((_ extract 7 0) symbol_1)))
 (let ((?x21 ((_ zero_extend 24) ?x20)))
 (let ((?x22 (bvshl ?x21 (_ bv24 32))))
 (let ((?x23 (bvashr ?x22 (_ bv24 32))))
 (let ((?x33 ((_ extract 7 0) symbol_3)))
 (let ((?x34 ((_ zero_extend 24) ?x33)))
 (let ((?x35 (bvshl ?x34 (_ bv24 32))))
 (let ((?x36 (bvashr ?x35 (_ bv24 32))))
 (and (distinct ?x36 ?x23) true))))))))))
(assert
 (let ((?x33 ((_ extract 7 0) symbol_3)))
 (let ((?x34 ((_ zero_extend 24) ?x33)))
 (let ((?x35 (bvshl ?x34 (_ bv24 32))))
 (let ((?x36 (bvashr ?x35 (_ bv24 32))))
 (let (($x51 (= ?x36 (_ bv0 32))))
 (not $x51)))))))
(assert
 (let ((?x33 ((_ extract 7 0) symbol_3)))
 (let ((?x34 ((_ zero_extend 24) ?x33)))
 (let ((?x35 (bvshl ?x34 (_ bv24 32))))
 (let ((?x36 (bvashr ?x35 (_ bv24 32))))
 (let ((?x39 ((_ extract 7 0) symbol_2)))
 (let ((?x40 ((_ zero_extend 24) ?x39)))
 (let ((?x41 (bvshl ?x40 (_ bv24 32))))
 (let ((?x42 (bvashr ?x41 (_ bv24 32))))
 (and (distinct ?x42 ?x36) true))))))))))
(assert
 (let ((?x45 ((_ extract 7 0) symbol_0)))
 (let ((?x46 ((_ zero_extend 24) ?x45)))
 (let ((?x47 (bvshl ?x46 (_ bv24 32))))
 (let ((?x48 (bvashr ?x47 (_ bv24 32))))
 (let ((?x39 ((_ extract 7 0) symbol_2)))
 (let ((?x40 ((_ zero_extend 24) ?x39)))
 (let ((?x41 (bvshl ?x40 (_ bv24 32))))
 (let ((?x42 (bvashr ?x41 (_ bv24 32))))
 (and (distinct ?x42 ?x48) true))))))))))
(assert
 (let ((?x20 ((_ extract 7 0) symbol_1)))
 (let ((?x21 ((_ zero_extend 24) ?x20)))
 (let ((?x22 (bvshl ?x21 (_ bv24 32))))
 (let ((?x23 (bvashr ?x22 (_ bv24 32))))
 (let ((?x39 ((_ extract 7 0) symbol_2)))
 (let ((?x40 ((_ zero_extend 24) ?x39)))
 (let ((?x41 (bvshl ?x40 (_ bv24 32))))
 (let ((?x42 (bvashr ?x41 (_ bv24 32))))
 (and (distinct ?x42 ?x23) true))))))))))
(assert
 (let ((?x39 ((_ extract 7 0) symbol_2)))
 (let ((?x40 ((_ zero_extend 24) ?x39)))
 (let ((?x41 (bvshl ?x40 (_ bv24 32))))
 (let ((?x42 (bvashr ?x41 (_ bv24 32))))
 (let (($x56 (= ?x42 (_ bv0 32))))
 (not $x56)))))))
(assert
 (let ((?x20 ((_ extract 7 0) symbol_1)))
 (let ((?x21 ((_ zero_extend 24) ?x20)))
 (let ((?x22 (bvshl ?x21 (_ bv24 32))))
 (let ((?x23 (bvashr ?x22 (_ bv24 32))))
 (let ((?x45 ((_ extract 7 0) symbol_0)))
 (let ((?x46 ((_ zero_extend 24) ?x45)))
 (let ((?x47 (bvshl ?x46 (_ bv24 32))))
 (let ((?x48 (bvashr ?x47 (_ bv24 32))))
 (and (distinct ?x48 ?x23) true))))))))))
(assert
 (let ((?x45 ((_ extract 7 0) symbol_0)))
 (let ((?x46 ((_ zero_extend 24) ?x45)))
 (let ((?x47 (bvshl ?x46 (_ bv24 32))))
 (let ((?x48 (bvashr ?x47 (_ bv24 32))))
 (let (($x59 (= ?x48 (_ bv0 32))))
 (not $x59)))))))
(check-sat)
