(let-const symbol_4 i32)
(let-const symbol_0 i32)
(let-const symbol_3 i32)
(let-const symbol_1 i32)
(let-const symbol_6 i32)
(let-const symbol_2 i32)
(let-const symbol_5 i32)
(assert (bool.not (i32.eq (i32.shr (i32.shl (i32.extend_i24_u (extract symbol_0 0 1)) (i32 24)) (i32 24)) (i32 0))))
(assert (i32.ne symbol_1 symbol_3))
(assert (i32.ne symbol_1 symbol_2))
(assert (i32.ne symbol_1 symbol_0))
(assert (i32.lt symbol_6 (i32 127)))
(assert (i32.gt symbol_6 (i32 0)))
(assert (i32.lt symbol_5 (i32 127)))
(assert (i32.gt symbol_5 (i32 0)))
(assert (i32.lt symbol_4 (i32 127)))
(assert (i32.gt symbol_4 (i32 0)))
(assert (i32.lt symbol_3 (i32 127)))
(assert (i32.gt symbol_3 (i32 0)))
(assert (i32.lt symbol_2 (i32 127)))
(assert (i32.gt symbol_2 (i32 0)))
(assert (i32.lt symbol_1 (i32 127)))
(assert (i32.gt symbol_1 (i32 0)))
(assert (i32.lt symbol_0 (i32 127)))
(assert (i32.gt symbol_0 (i32 0)))
(check-sat)